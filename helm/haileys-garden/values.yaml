# Default values for haileys-garden
replicaCount: 2

image:
  repository: zealousidealowl/haileys-garden
  pullPolicy: Always
  tag: "latest"

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/limit-rps: "100"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://haileysgarden.com,https://www.haileysgarden.com,http://haileysgarden.com,http://www.haileysgarden.com"
  hosts:
    - host: haileysgarden.com
      paths:
        - path: /
          pathType: Prefix
    - host: www.haileysgarden.com
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 500m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: 8080
  initialDelaySeconds: 10
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 5

# Signal API configuration
signalApi:
  enabled: true
  replicaCount: 1
  image:
    repository: bbernhard/signal-cli-rest-api
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

trufflehog:
  enabled: true
  replicaCount: 1
  image:
    repository: trufflesecurity/trufflehog-enterprise
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
  ingress:
    enabled: true
    host: trufflehog.haileysgarden.com
  database:
    # Use PostgreSQL for TruffleHog Enterprise
    host: postgres
    port: 5432
    name: trufflehog
    user: trufflehog
    # Password should be set via secret
    passwordSecret: trufflehog-db-password
  config:
    # TruffleHog Enterprise configuration
    logLevel: info
    scanInterval: "1h"
    # GitHub integration
    github:
      enabled: true
      org: jkzilla
      # Token should be set via secret
      tokenSecret: github-token
    # Slack notifications
    slack:
      enabled: true
      # Webhook should be set via secret
      webhookSecret: slack-webhook
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 250m
      memory: 512Mi
  persistence:
    enabled: true
    size: 10Gi
    storageClass: ""

postgresql:
  enabled: true
  auth:
    username: trufflehog
    password: changeme
    database: trufflehog
  primary:
    persistence:
      enabled: true
      size: 8Gi
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi

# Application configuration
config:
  signalApiUrl: "http://signal-api:8080"
  signalNumber: "+17073243359"
  ownerPhoneNumber: "+17073243359"

# NGINX Ingress Controller
nginxIngress:
  enabled: true
  controller:
    service:
      type: LoadBalancer
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: "external"
        service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "instance"
        service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
        service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-east-1:011229313364:certificate/1788d41a-e53e-473e-8579-4c3eed565dea"
        service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
        service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
        service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/healthz"
        service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "10254"
        service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: "http"
